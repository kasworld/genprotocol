// Code generated by "genprotocol.exe -ver=1.0 -prefix=c2s -basedir=example -statstype=int"

package c2s_msgp

import (
	"fmt"

	"github.com/kasworld/genprotocol/example/c2s_idcmd"
	"github.com/kasworld/genprotocol/example/c2s_idnoti"
	"github.com/kasworld/genprotocol/example/c2s_obj"
	"github.com/kasworld/genprotocol/example/c2s_packet"
	"github.com/tinylib/msgp/msgp"
)

// MarshalBodyFn marshal body and append to oldBufferToAppend
// and return newbuffer, body type, error
func MarshalBodyFn(body interface{}, oldBuffToAppend []byte) ([]byte, byte, error) {
	newBuffer, err := body.(msgp.Marshaler).MarshalMsg(oldBuffToAppend)
	return newBuffer, 0, err
}

func UnmarshalPacket(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	switch h.FlowType {
	case c2s_packet.Request:
		if int(h.Cmd) >= len(ReqUnmarshalMap) {
			return nil, fmt.Errorf("unknown request command: %v %v",
				h.FlowType, c2s_idcmd.CommandID(h.Cmd))
		}
		return ReqUnmarshalMap[h.Cmd](h, bodyData)

	case c2s_packet.Response:
		if int(h.Cmd) >= len(RspUnmarshalMap) {
			return nil, fmt.Errorf("unknown response command: %v %v",
				h.FlowType, c2s_idcmd.CommandID(h.Cmd))
		}
		return RspUnmarshalMap[h.Cmd](h, bodyData)

	case c2s_packet.Notification:
		if int(h.Cmd) >= len(NotiUnmarshalMap) {
			return nil, fmt.Errorf("unknown notification command: %v %v",
				h.FlowType, c2s_idcmd.CommandID(h.Cmd))
		}
		return NotiUnmarshalMap[h.Cmd](h, bodyData)
	}
	return nil, fmt.Errorf("unknown packet FlowType %v", h.FlowType)
}

var ReqUnmarshalMap = [...]func(h c2s_packet.Header, bodyData []byte) (interface{}, error){
	c2s_idcmd.InvalidCmd: Unmarshal_ReqInvalidCmd,
	c2s_idcmd.Login:      Unmarshal_ReqLogin,
	c2s_idcmd.Heartbeat:  Unmarshal_ReqHeartbeat,
	c2s_idcmd.Chat:       Unmarshal_ReqChat,
	c2s_idcmd.Act:        Unmarshal_ReqAct,
}

var RspUnmarshalMap = [...]func(h c2s_packet.Header, bodyData []byte) (interface{}, error){
	c2s_idcmd.InvalidCmd: Unmarshal_RspInvalidCmd,
	c2s_idcmd.Login:      Unmarshal_RspLogin,
	c2s_idcmd.Heartbeat:  Unmarshal_RspHeartbeat,
	c2s_idcmd.Chat:       Unmarshal_RspChat,
	c2s_idcmd.Act:        Unmarshal_RspAct,
}

var NotiUnmarshalMap = [...]func(h c2s_packet.Header, bodyData []byte) (interface{}, error){
	c2s_idnoti.Broadcast: Unmarshal_NotiBroadcast,
}

func Unmarshal_ReqInvalidCmd(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.ReqInvalidCmd_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_RspInvalidCmd(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.RspInvalidCmd_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_ReqLogin(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.ReqLogin_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_RspLogin(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.RspLogin_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_ReqHeartbeat(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.ReqHeartbeat_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_RspHeartbeat(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.RspHeartbeat_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_ReqChat(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.ReqChat_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_RspChat(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.RspChat_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_ReqAct(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.ReqAct_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_RspAct(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.RspAct_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}

func Unmarshal_NotiBroadcast(h c2s_packet.Header, bodyData []byte) (interface{}, error) {
	var args c2s_obj.NotiBroadcast_data
	if _, err := args.UnmarshalMsg(bodyData); err != nil {
		return nil, err
	}
	return &args, nil
}
